nodes:
  - node_id: pdf-extract#1
    title: "%pdf-1%"
    inputs_from:
      - handle: api_token
        value: ${{OO_SECRET:Custom,mineru,api-key}}
        from_flow:
          - input_handle: api_token
      - handle: pdf_url
        from_node:
          - node_id: upload-to-cloud#1
            output_handle: remote_url
      - handle: enable_formula
        value: true
        from_flow:
          - input_handle: enable_formula
      - handle: seed
        value:
      - handle: extra_formats
        value:
      - handle: page_ranges
        value:
      - handle: callback
        value:
      - handle: data_id
        value:
      - handle: language
        value:
      - handle: model_version
        value:
      - handle: enable_table
        value: true
        from_flow:
          - input_handle: enable_table
      - handle: is_ocr
        value: true
        from_flow:
          - input_handle: is_ocr
    task: self::pdf-extract
  - node_id: upload-to-cloud#1
    title: "%upload-file-to-cloud-1%"
    inputs_from:
      - handle: file
        value: /oomol-driver/oomol-storage/oopilot-instructions.pdf
        from_flow:
          []
        from_node:
          - node_id: pre-detection_pdf#1
            output_handle: file
    task: upload-to-cloud::upload-to-cloud
  - node_id: get-task-result#2
    title: "%2%"
    inputs_from:
      - handle: api_token
        value: ${{OO_SECRET:Custom,mineru,api-key}}
      - handle: task_id
        from_node:
          - node_id: pdf-extract#1
            output_handle: task_id
      - handle: max_retries
        value: 60
        from_flow:
          - input_handle: max_retries
    task: self::get-task-result
  - node_id: +python#1
    title: "%python-1%"
    icon: ":logos:python:"
    task:
      ui:
        default_width: 450
      inputs_def:
        - handle: response_data
          description: "%key12%"
          json_schema:
            type: object
      outputs_def:
        - handle: full_zip_url
          json_schema:
            type: string
      executor:
        name: python
        options:
          entry: scriptlets/+scriptlet#1.py
    inputs_from:
      - handle: response_data
        from_node:
          - node_id: get-task-result#2
            output_handle: task_data
  - node_id: extract_zip#1
    title: "%extract-zip-1%"
    inputs_from:
      - handle: zip_file
        from_node:
          - node_id: url2file#1
            output_handle: file
      - handle: zip_dir
        value: null
      - handle: password
        value: null
    task: zip::extract_zip
  - node_id: list_files_from_folder#1
    title: "%list-files-from-folder-1%"
    inputs_from:
      - handle: folder
        from_node:
          - node_id: extract_zip#1
            output_handle: output
      - handle: sort
        value: false
      - handle: traverse
        value: false
      - handle: absolute_path
        value: true
    task: oomol-file::list_files_from_folder
  - node_id: markdown-to-epub#1
    title: "%markdown-epub-1%"
    inputs_from:
      - handle: markdown_file
        from_node:
          - node_id: get-md-from-folder#1
            output_handle: markdown_file
      - handle: output_path
        value: /oomol-driver/oomol-storage/epub/hello.epub
        from_flow:
          - input_handle: output_path
      - handle: title
        value: null
        from_flow:
          []
        from_node:
          - node_id: llm#1
            output_handle: title
      - handle: author
        value: null
        from_flow:
          []
        from_node:
          - node_id: llm#1
            output_handle: author
      - handle: theme
        value: minimal
        from_flow:
          - input_handle: theme
      - handle: cover_image
        value:
        from_node:
          - node_id: pre-detection_pdf#1
            output_handle: cover_image
    task: self::markdown-to-epub
  - node_id: url2file#1
    title: "%url-to-file-1%"
    inputs_from:
      - handle: url
        from_node:
          - node_id: +python#1
            output_handle: full_zip_url
      - handle: saved_folder
        value: null
        from_flow:
          - input_handle: saved_folder
      - handle: ensure_folder
        value: false
      - handle: file_head
        value: null
      - handle: if_existing
        value: override
      - handle: threads_count
        value: 1
      - handle: headers
        value:
          {}
      - handle: cookies
        value:
          {}
      - handle: window_width
        value: 7
      - handle: failure_ladder
        value:
          - 5
      - handle: min_segment_length
        value: 1048576
      - handle: once_fetch_size
        value: 16384
      - handle: timeout
        value: 30
      - handle: retry_times
        value: 0
      - handle: retry_sleep
        value: 0
    subflow: downloader::url2file
  - node_id: pre-detection_pdf#1
    task: self::pre-detection_pdf
    inputs_from:
      - handle: file
        from_flow:
          - input_handle: file
  - node_id: get-md-from-folder#1
    task: self::get-md-from-folder
    inputs_from:
      - handle: file_paths
        from_node:
          - node_id: list_files_from_folder#1
            output_handle: file_paths
      - handle: char_limit
        value: 500
  - node_id: llm#1
    title: "%llm-1%"
    inputs_from:
      - handle: messages
        value: null
      - handle: timeout
        value: 30
      - handle: retry_times
        value: 0
      - handle: retry_sleep
        value: 3.5
      - handle: model
        value:
          model: deepseek-chat
          temperature: 0.5
          top_p: 1
          max_tokens: 8192
      - handle: template
        value:
          - role: user
            content: "我需要确定书本的名称和作者：

              如果用户主动传入了书名：{{title}} 和
              作者：{{author}}，就以用户的要求的名字返回出去。 如果没有传那么读取，书本的前开头的文字：
              {{first_500_chars}}，分析后返回。

              如果分析不出来没有，就用对应的语言返回未知。"
        schema_overrides:
          - schema:
              type: array
      - handle: skills
        value:
          []
      - handle: stream
        value: true
      - handle: first_500_chars
        value: hello!
        from_node:
          - node_id: get-md-from-folder#1
            output_handle: first_500_chars
      - handle: title
        value:
        from_flow:
          - input_handle: title
      - handle: author
        value:
        from_flow:
          - input_handle: author
    task: llm::llm
    inputs_def:
      - handle: first_500_chars
        json_schema:
          type: string
          ui:widget: text
        value: hello!
      - handle: title
        json_schema:
          type: string
        nullable: true
        description: 电子书标题（可选，默认使用文件名）
      - handle: author
        json_schema:
          type: string
        nullable: true
        description: 电子书作者（可选）
    outputs_def:
      - handle: title
        json_schema:
          type: string
        nullable: true
        description: 电子书标题（可选，默认使用文件名）
      - handle: author
        json_schema:
          type: string
        nullable: true
        description: 电子书作者（可选）
inputs_def:
  - handle: file
    description: "%input-pdf-file-to-convert-to-epub%"
    json_schema:
      type: string
      ui:widget: file
      ui:options:
        filters:
          - name: PDF
            extensions:
              - pdf
        excludeAll: true
    nullable: false
    executor_name: nodejs
  - handle: api_token
    description: "%mineru-api-authentication-token3%"
    json_schema:
      contentMediaType: oomol/secret
      type: string
    value: ${{OO_SECRET:Custom,mineru,api-key}}
    nullable: false
    executor_name: python
  - handle: output_path
    description: "%output-path-for-the-generated-epub-file2%"
    json_schema:
      type: string
      ui:widget: save
      ui:options:
        filters:
          - extensions:
              - epub
            name: EPUB
    nullable: false
    executor_name: python
  - handle: title
    description: "%book-title-optional-defaults-to-filename2%"
    json_schema:
      type: string
    value:
    nullable: true
    executor_name: python
  - handle: author
    description: "%book-author-optional2%"
    json_schema:
      type: string
    value:
    nullable: true
    executor_name: python
  - handle: theme
    description: "%epub-theme-style-duokan-or-minimal2%"
    json_schema:
      type: string
      enum:
        - duokan
        - minimal
      ui:options:
        {}
    value: minimal
    nullable: true
    executor_name: python
  - handle: is_ocr
    description: "%enable-ocr-for-text-extraction%"
    json_schema:
      type: boolean
    value: true
    nullable: true
    executor_name: python
  - handle: enable_formula
    description: "%enable-mathematical-formula-recognition%"
    json_schema:
      type: boolean
    value: true
    nullable: true
    executor_name: python
  - handle: enable_table
    description: "%enable-table-structure-recognition%"
    json_schema:
      type: boolean
    value: true
    nullable: true
    executor_name: python
  - handle: max_retries
    description: "%maximum-retry-attempts-for-api-calls%"
    json_schema:
      type: number
      ui:options:
        step: 1
      minimum: 30
      exclusiveMinimum: 30
    value:
    nullable: true
    executor_name: python
outputs_def:
  - handle: epub_file
    description: "Generated EPUB file path"
    json_schema:
      type: string
    nullable: false
    executor_name: python
outputs_from:
  - handle: epub_file
    from_node:
      - node_id: markdown-to-epub#1
        output_handle: epub_file
title: "%pdf-to-epub2%"
description: "%convert-pdf-documents-to-epub-format-with-ai-powered-text-extrac%"
